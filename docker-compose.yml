version: '3'

services:

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./hadoop-config:/etc/hadoop
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    extra_hosts:
      - "host.docker.internal:host-gateway"


  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    ports:
      - "9864:9864"
  controller:
    image: 'trinodb/trino:444'
    hostname: trino
    volumes:
      - ./etc/catalog:/etc/trino/catalog
      # - /tmp/warehouse/pyiceberg_catalog.db:/iceberg-catalog/iceberg.db
      - /home/rohitkarki/Downloads/sqlite-jdbc-3.50.2.0.jar:/usr/lib/trino/plugin/iceberg/sqlite-jdbc-3.50.2.0.jar

    ports:
      - '8080:8080'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # depends_on:
    #   metastore:
    #     condition: service_healthy
    #   object-store:
    #     condition: service_healthy

  spark-scala:
    build:
      context: .
      dockerfile: Dockerfile.scala
    container_name: spark-scala
    depends_on:
      - namenode
      - postgres
    volumes:
      - ./scala-spark-project:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # pyspark:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - namenode
  #     - datanode
  #     - postgres
  #   container_name: pyspark
  #   volumes:
  #     - ./pyspark_script.py:/app/pyspark_script.py
  #   environment:
  #     - PYSPARK_PYTHON=python3
  # minio:
  #   image: minio/minio
  #   environment:
  #     - MINIO_ROOT_USER=minio-user
  #     - MINIO_ROOT_PASSWORD=minio-password
  #   ports:
  #     - 9001:9001
  #     - 9000:9000
  #   command: ["server", "/data", "--console-address", ":9001"]
  #   healthcheck:
  #     test: ["CMD-SHELL", "mc alias set minio http://localhost:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} && mc mb minio/warehouse && mc anonymous set public minio/warehouse"]
  #     interval: 2s
  #     timeout: 2s
  #     retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: exampledb
      POSTGRES_USER: exampleuser
      POSTGRES_PASSWORD: examplepass
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

volumes:
  hadoop_namenode:
  hadoop_datanode: