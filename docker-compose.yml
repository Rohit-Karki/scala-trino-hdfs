version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./hadoop-config:/etc/hadoop
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    ports:
      - "9864:9864"
  controller:
    image: "trinodb/trino:444"
    hostname: trino
    volumes:
      - ./etc/catalog:/etc/trino/catalog
      # For MYSQL JDBC drivers
      - /home/rohitkarki/Downloads/mysql-connector-j-8.3.0.jar:/usr/lib/trino/plugin/iceberg/mysql-connector-j-8.3.0.jar
      # For SQLite JDBC drivers uncomment the following linest
      # - /home/rohitkarki/Downloads/sqlite-jdbc-3.50.2.0.jar:/usr/lib/trino/plugin/iceberg/sqlite-jdbc-3.50.2.0.jar

    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"


  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=exampledb
      - MYSQL_ROOT_PASSWORD=exampleuser
      - MYSQL_USER=exampleuser
      - MYSQL_PASSWORD=examplepass
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql


volumes:
  hadoop_namenode:
  hadoop_datanode:
